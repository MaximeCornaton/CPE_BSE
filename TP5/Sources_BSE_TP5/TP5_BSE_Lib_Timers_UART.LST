C51 COMPILER V9.60.0.0   TP5_BSE_LIB_TIMERS_UART                                           12/13/2022 17:42:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TP5_BSE_LIB_TIMERS_UART
OBJECT MODULE PLACED IN TP5_BSE_Lib_Timers_UART.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TP5_BSE_Lib_Timers_UART.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND TA
                    -BS(2)

line level    source

   1          /******************************************************************************
   2          ;   FILE NAME   : TP5_BSE_Lib_Timers_UART.C
   3          ;   TARGET MCUs : C8051F020, 
   4          ;   DESCRIPTION : Configurations des Timers et des UART
   5          ;
   6          ;   REVISION 1.0
   7          ;   
   8          */
   9          //******************************************************************************
  10          
  11          #include "C8051F020.h"
  12          #include "c8051F020_SFR16.h"
  13          #include "TP5_BSE_Lib_Timers_UART.h"
  14          
  15          
  16          //*****************************************************************************  
  17          //******************************************************************************
  18          void Config_Timer2_TimeBase(void)
  19          {
  20   1        CKCON &= ~(1<<5);         // T2M: Timer 2 Clock Select
  21   1                               // CLK = sysclk/12TR2 = 0;  //Stop Timer
  22   1        TF2 = 0;  // RAZ TF2
  23   1        EXF2 = 0;  // RAZ EXF2
  24   1        RCLK0 = 0;         
  25   1        TCLK0 = 0;
  26   1        CPRL2 = 0;  // Mode AutoReload  
  27   1        EXEN2 = 0;   // Timer2 external Enable Disabled 
  28   1        CT2 = 0;    // Mode Timer
  29   1      
  30   1        RCAP2 = -((SYSCLK/12)/100);
  31   1        T2 = RCAP2;
  32   1        TR2 = 1;                           // Timer2 démarré
  33   1        PT2 = 1;                // Priorité Timer2 Haute
  34   1      
  35   1         ET2 = 1;               // INT Timer2 autorisée
  36   1      }
  37          
  38          //******************************************************************************
  39          void Config_Timer4_Event_Counter(unsigned int Event_to_Count) // Pour étape 4
  40          {
  41   1        // Timer 4 configuré en compteur d'évènements SIG_IN
  42   1        // SIG_IN câblé sur l'entrée T4 du Timer4
  43   1        
  44   1        // Timer4 en mode autorechargement
  45   1        // Mode Counter
  46   1        // CLKTimer = SIG_IN
  47   1        // Valeur rechargement= (65536 - Nbre_Event_to_count)
  48   1        // L'overflow, et donc l'interruption Timer4 signale le comptage de 100 évènements
  49   1        T4CON = 0x02;   // Flags TF4 et EXF4 effacés
  50   1                        // RCLK1 et TCLK1 à zéro
  51   1                        // Transitions sur T4EX ignorées
  52   1                        // Timer stoppé
  53   1                        // Timer en mode counter
  54   1                        // Mode auto-reload
C51 COMPILER V9.60.0.0   TP5_BSE_LIB_TIMERS_UART                                           12/13/2022 17:42:38 PAGE 2   

  55   1        RCAP4 = 65536-Event_to_Count;
  56   1        T4 = RCAP4;
  57   1        T4CON |= (1<<2);      // TR4 = 1 -- Timer2 démarré
  58   1        EIP2 |= (1<<2);      //PT4 = 0 -- Priorité Timer4 haute
  59   1        EIE2 |= (1<<2);      //ET4 = 1 --  INT Timer4 autorisée
  60   1      }
  61          
  62          //*****************************************************************************  
  63          //CFG_clock_UART
  64          //  Utilisation du Timer 1
  65          //
  66          // 
  67          //*****************************************************************************  
  68          void CFG_Clock_UART0(void)
  69          {
  70   1          CKCON |= (1<<4);             // T1M: Timer 1 Clock Select
  71   1                                       // Timer CLK = SYSCLK
  72   1        
  73   1          TMOD |= (1<<5);             
  74   1          TMOD &= ~((1<<7)|(1<<6)|(1<<4));        // Timer1 configuré en Timer 8 bit avec auto-reload 
  75   1          TF1 = 0;          // Flag Timer effacé
  76   1          TH1 = -(Preload_Timer1);
  77   1          ET1 = 0;           // Interruption Timer 1 dévalidée
  78   1          TR1 = 1;           // Timer1 démarré
  79   1      }
  80           
  81          //*****************************************************************************  
  82          //CFG_uart0_mode1
  83          //
  84          //
  85          // 
  86          //*****************************************************************************  
  87          void CFG_UART0(void)
  88          {
  89   1          RCLK0 = 0;   // Source clock Timer 1
  90   1          TCLK0 = 0;
  91   1          PCON  |= (1<<7); //SMOD0: UART0 Baud Rate Doubler Disabled.
  92   1          PCON &= ~(1<<6); // SSTAT0=0
  93   1          SCON0 = 0x70;   // Mode 1 - Check Stop bit - Reception validée
  94   1                         
  95   1       //   TI0 = 0;     // Drapeaux TI et RI à zéro
  96   1          RI0 = 0;  
  97   1          TI0 = 1;  //à cause du codage de putchar
  98   1        
  99   1          ES0 = 0;  // Interruption UART non autorisée
 100   1      }
 101          //*****************************************************************************  
 102          char putchar(char c)
 103          {
 104   1        while(TI0==0);
 105   1        TI0 = 0;
 106   1        SBUF0 = c;
 107   1        return c;
 108   1      }
 109          
 110          //*****************************************************************************  
 111          char _getkey(void)
 112          {
 113   1        char c;
 114   1        while(RI0==0);
 115   1        RI0 = 0;
 116   1        c = SBUF0;
C51 COMPILER V9.60.0.0   TP5_BSE_LIB_TIMERS_UART                                           12/13/2022 17:42:38 PAGE 3   

 117   1        return c;
 118   1        
 119   1      }
 120          
 121          //*****************************************************************************  
 122          char getkey_one_time(void)
 123            
 124          {
 125   1        if (RI0==0) return 0;
 126   1        else
 127   1        {
 128   2           RI0 = 0;
 129   2           return SBUF0;
 130   2        }
 131   1      }
 132          
 133          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
